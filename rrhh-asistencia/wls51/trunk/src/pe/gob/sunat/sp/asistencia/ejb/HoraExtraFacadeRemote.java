/*
 * Generated by XDoclet - Do not edit!
 */
package pe.gob.sunat.sp.asistencia.ejb;

/**
 * Remote interface for HoraExtraFacadeEJB.
 * @xdoclet-generado el 03-02-2020
 */
public interface HoraExtraFacadeRemote
   extends javax.ejb.EJBObject
{

   public java.util.ArrayList cargarHorasExtras( java.lang.String dbpool,java.lang.String codJefe )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.lang.String modificarHoraExtra( pe.gob.sunat.sp.asistencia.bean.BeanHoraExtra he,java.lang.String fechaAut,java.lang.String horaIni,java.lang.String horaFin,java.lang.String horaSalida,java.lang.String obs,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList eliminarHorasExtras( java.lang.String[] params,java.util.ArrayList lista )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarHorasExtras( java.lang.String dbpool,java.lang.String criterio,java.lang.String valor,java.lang.String codJefe,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarAcumulados( java.lang.String dbpool,java.lang.String criterio,java.lang.String valor,java.lang.String codUO,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.lang.String registraCompensacionHE( java.lang.String dbpool,java.lang.String codPers,java.lang.String codUO,java.lang.String fecha,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.lang.String registraAutorizacionHE( java.lang.String dbpool,java.util.HashMap params,java.util.ArrayList trabajadores,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList cargarAutorizaciones( java.lang.String dbpool,java.lang.String codPers )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public pe.gob.sunat.sp.asistencia.bean.BeanHoraExtra verificaSalidaHE( java.lang.String dbpool,java.lang.String codPersonal )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void acumularHE( java.util.HashMap mapa,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void registrarSalidaHE( java.lang.String dbpool,java.lang.String codPersonal,java.lang.String fecha,java.lang.String horaIni,java.lang.String horaSalida,java.lang.String fechaEfect )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   /**
    * Metodo encargado de procesar la acumulaci�n de horas de labor excepcional por interfaz segun criterio
    * @param mapa HashMap
    * @param usuario String
    */
   public void procesarLaborExcepcional_interfaz( java.util.HashMap mapa,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   /**
    * Metodo encargado de procesar la acumulaci�n de horas de labor excepcional por grupo de colaboradores
    * @param mapa HashMap
    * @param usuario String
    */
   public void procesarLaborExcepcional( java.util.HashMap mapa,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList procesarCompensacionTemporal( java.util.HashMap params )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList validarCompensacionTemporal( java.util.HashMap params )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

}
