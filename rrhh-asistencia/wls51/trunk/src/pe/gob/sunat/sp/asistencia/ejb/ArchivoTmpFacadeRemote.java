/*
 * Generated by XDoclet - Do not edit!
 */
package pe.gob.sunat.sp.asistencia.ejb;

/**
 * Remote interface for ArchivoTmpFacadeEJB.
 * @xdoclet-generado el 03-02-2020
 */
public interface ArchivoTmpFacadeRemote
   extends javax.ejb.EJBObject
{
   /**
    * Obtener archivo temporal
    * @param dbpool: conexiï¿½n.
    * @param mapa: Mapa con campos num_archivo , num_arcdet
    * @return mapa con nombre del archivo e inputstream
    * @throws IncompleteConversationalState
    * @throws RemoteException
    */
   public java.util.Map descargarArchivo( java.lang.String dbPool,java.util.Map mapa )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   /**
    * Buscar archivos temporal activos
    * @param dbpool: conexion
    * @param mapa: Mapa con campos num_archivo, num_seqdoc
    * @return lista de archivos
    */
   public java.util.List buscarArchivos( java.lang.String dbpool,java.util.Map mapa )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   /**
    * Ingresar temporal archivo
    * @param dbpool: conexion
    * @param mapa: Mapa de datos a ingresar
    * @return Numero identificador de archivo ingreso
    */
   public int registrarArchivo( java.lang.String dbpool,java.util.Map mapa )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   /**
    * Cambio de estado
    * @param dbpool : conexion
    * @param mapa : Mapa con campos de filtro
    * @return Mayor a cero si es exitoso
    */
   public int cambiarEstado( java.lang.String dbpool,java.util.Map mapa,java.lang.String estado )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   /**
    * Elimina fisicamente archivos de acuerdo al filtro
    * @param dbpool : conexion
    * @param mapa : Mapa con campos de filtro
    * @return Mayor a cero si es exitoso
    */
   public int eliminarArchivosTemporales( java.lang.String dbpool,java.util.Map mapa )
      throws java.rmi.RemoteException;

}
