/*
 * Generated by XDoclet - Do not edit!
 */
package pe.gob.sunat.sp.asistencia.ejb;

/**
 * Remote interface for ReporteMasivoFacadeEJB.
 * @xdoclet-generado el 03-02-2020
 */
public interface ReporteMasivoFacadeRemote
   extends javax.ejb.EJBObject
{

   public void marcaciones( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void turnosTrabajo( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void marcacionesImpares( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void personalSinTurno( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void calificado( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * Metodo encargado de obtener el reporte de Resumen Mensual
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void resumenMensual( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * Metodo encargado de obtener el reporte de Resumen Diario
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void resumenDiario( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void inasistencias( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void vacacionesPendientes( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void vacacionesProgramadas( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * Metdo encargado de obtener la lista de reportes
    * @param dbpool
    * @param codPers
    * @return 
    * @throws RemoteException    */
   public java.util.ArrayList cargarLogReportes( java.lang.String dbpool,java.lang.String codPers )
      throws java.rmi.RemoteException;

   public void vacacionesEfectivasPendientes( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void asignacionResponsablesMasivo( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void vacaciones( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void vacacionesEfectuadas( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void vacacionesCompensadas( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void licenciaMedica( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void horaExtra( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * Metdo encargado
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void detalleDiario( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * PRAC-ASANCHEZ 28/08/2009 Metdo encargado
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void laborExcepcional( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * Metodo encargado de la generacion del reporte de Trabajadores notificados para Goce Vacacional
    * @param params HashMap
    * @param usuario String
    * @throws RemoteException    */
   public void notificacionesXVacacionesATrabajadores( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * JVILLACORTA - 18/04/2011 - ALERTA DE SOLICITUDES
    */
   public void notificaDirectivos( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * JVILLACORTA - 18/04/2011 - ALERTA DE SOLICITUDES
    */
   public void notificaTrabajadores( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * Metodo encargado de obtener el reporte de gestion masivo diario por movimiento
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void masivoDiarioMovimiento( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * Metodo encargado de obtener el reporte de gestion masivo mensual por movimiento
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void masivoMensualMovimiento( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * Metodo encargado de obtener el reporte de gestion masivo mensual por unidad organica
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void masivoMensualUUOO( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * Metodo encargado de obtener el reporte de gestion masivo mensual por colaborador
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void masivoMensualColaborador( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * NVILLAR 03/05/2012 Metdo encargado
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void laborExcepcional2( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * NVILLAR 04/05/2012 Metdo encargado
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void consultaPermanencias( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * NVILLAR 04/05/2012 Metdo encargado
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void consultaPermanencias2( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   /**
    * NVILLAR 25/04/2012 Metdo encargado
    * @param params
    * @param usuario
    * @return 
    * @throws RemoteException    */
   public void ConsultaHorasAutNoAutComp( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void vacacionesGozadasMatrimonio( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void autorizacionesClimaLaboral( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void notificaDirectivosNoVacaciones( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void vacacionesTruncas( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void reportePorTipoLicencia( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void reportePapeletas( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

   public void reporteAcumuladoLicencias( java.util.HashMap params,java.lang.String usuario )
      throws java.rmi.RemoteException;

}
