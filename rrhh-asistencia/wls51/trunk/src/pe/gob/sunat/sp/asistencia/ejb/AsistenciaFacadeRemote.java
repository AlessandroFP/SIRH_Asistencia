/*
 * Generated by XDoclet - Do not edit!
 */
package pe.gob.sunat.sp.asistencia.ejb;

/**
 * Remote interface for AsistenciaFacadeEJB.
 * @xdoclet-generado el 03-02-2020
 */
public interface AsistenciaFacadeRemote
   extends javax.ejb.EJBObject
{

   public java.util.ArrayList buscarMarcacionesImpares( java.lang.String dbpool,java.lang.String fechaIni,java.lang.String fechaFin,java.lang.String criterio,java.lang.String valor,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarMarcacionesPase( java.lang.String dbpool,java.lang.String fechaIni,java.lang.String fechaFin,java.lang.String codPers,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarMarcaciones( java.lang.String dbpool,java.lang.String fecha,java.lang.String codPers,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList listarMarcacionesImpares( java.lang.String dbpool,java.lang.String codPers,java.lang.String fecha )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void registrarMarcacionImpar( java.lang.String dbpool,java.lang.String codPers,java.lang.String fecha,java.lang.String hora,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   /**
    * Metodo encargado de invocar al proceso de Asistencia
    * @param mapa
    * @return 
    * @throws RemoteException    */
   public java.lang.String procesarAsistencia( java.util.Map mProceso )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList actualizarPapeletas( java.lang.String dbpool,java.lang.String[] params,java.util.ArrayList lista,java.lang.String usuario,java.lang.String fecha,java.lang.String supervisor,java.lang.String[] observs )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void registrarPapeleta( java.lang.String dbpool,java.lang.String codPers,java.lang.String periodo,java.lang.String uOrg,java.lang.String fIng,java.lang.String hIng,java.lang.String codMov,java.lang.String usuario,java.lang.String supervisor,java.lang.String observs )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void modificarPapeleta( java.lang.String dbpool,java.lang.String codPers,java.lang.String periodo,java.lang.String uOrg,java.lang.String fIng,java.lang.String hIng,java.lang.String codMov,java.lang.String usuario,java.lang.String supervisor,java.lang.String observs )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void eliminarPapeleta( java.lang.String dbpool,java.lang.String codPers,java.lang.String periodo,java.lang.String uOrg,java.lang.String fIng,java.lang.String hIng,java.lang.String usuario,java.lang.String nvoMov )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList calificarPapeletas( java.lang.String dbpool,java.lang.String[] params,java.util.ArrayList lista,java.lang.String codJefe,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void alternarVoBoPapeleta( java.lang.String dbpool,java.lang.String codPers,java.lang.String periodo,java.lang.String uOrg,java.lang.String fIng,java.lang.String hIng,java.lang.String visto,java.lang.String codJefe,java.lang.String usuario,java.lang.String mov,float minle )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList calificarAsistencias( java.lang.String dbpool,java.lang.String[] params,java.util.ArrayList lista,java.lang.String usuario,java.lang.String fecha )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList calificarAsistenciasCasPlanilla( java.lang.String dbpool,java.lang.String[] params,java.util.ArrayList lista,java.lang.String usuario,java.lang.String fecha,java.lang.String regimenModalidad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void registrarCalificacion( java.lang.String dbpool,java.lang.String codPers,java.lang.String periodo,java.lang.String uOrg,java.lang.String fIng,java.lang.String hIng,java.lang.String codMov,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void modificarCalificacion( java.lang.String dbpool,java.lang.String codPers,java.lang.String periodo,java.lang.String uOrg,java.lang.String fIng,java.lang.String hIng,java.lang.String codMov,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   /**
    * Grabacion del Registro de Devolucion
    */
   public void grabarDevolucion( java.util.Map devol )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.List buscarPapeletasSubordinados( java.lang.String dbpool,java.lang.String codPers,java.lang.String fechaIni,java.lang.String fechaFin,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.List buscarPapeletasGeneradas( java.lang.String dbpool,java.lang.String codPers,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.List buscarAsistencias( java.lang.String dbpool,java.lang.String codPers,java.lang.String fecha,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarAsistenciasPeriodo( java.lang.String dbpool,java.lang.String periodo,java.lang.String criterio,java.lang.String valor )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public pe.gob.sunat.sp.asistencia.bean.BeanDevolucion buscarDevoluciones( java.lang.String dbpool,java.lang.String codPers,java.lang.String periodo,java.lang.String mov )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.HashMap buscarTrabajador( java.lang.String dbpool,java.lang.String codPers,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.HashMap buscarTrabajadorJefe( java.lang.String dbpool,java.lang.String codPers,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.HashMap buscarSuperiorSolicitud( java.util.HashMap mapa )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.HashMap buscarJefe( java.lang.String dbpool,java.lang.String uorg,java.lang.String codPers )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public pe.gob.sunat.sp.bean.BeanT12 buscarUObyCodigo( java.lang.String dbpool,java.lang.String codigo )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarUOrgan( java.lang.String dbpool,java.lang.String criterio,java.lang.String valor,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   /**
    * Metodo usado para buscar intendencias
    * @param datos Map
    * @return List
    * @throws FacadeException
    */
   public java.util.List buscarIntendencias( java.util.Map params )
      throws pe.gob.sunat.framework.core.ejb.FacadeException, java.rmi.RemoteException;

   public java.util.ArrayList buscarUOPeriodo( java.lang.String dbpool,java.lang.String periodo,java.lang.String criterio,java.lang.String valor )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarUOSinPeriodo( java.lang.String dbpool,java.lang.String periodo )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarPersonal( java.lang.String dbpool,java.lang.String criterio,java.lang.String valor,java.util.HashMap seguridad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarT99Codigo( java.lang.String dbpool,java.lang.String criterio,java.lang.String valor,java.lang.String codTab )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.lang.String obtenerFechaSgtesDiasHabiles( java.lang.String dbpool,java.lang.String fechaReferencia,int numDias )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public int obtenerDiasHabilesDiferencia( java.lang.String dbpool,java.lang.String fecha1,java.lang.String fecha2 )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   /**
    * Obtiene el parametro fecha de implentacion del reporte
    * @throws Exception
    */
   public java.lang.String findParamByCodTabCodigo( java.util.HashMap datos )
      throws pe.gob.sunat.framework.core.ejb.FacadeException, java.rmi.RemoteException;

   public int validaDiasAntesDespues( java.lang.String dbpool,java.lang.String mov,java.lang.String fechaRegistro,java.lang.String fechaInicio,java.lang.String fechaFin )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.lang.String validarMovimiento( java.lang.String dbpool,java.lang.String codPers,java.lang.String fecha,java.lang.String hIni,java.lang.String hFin,java.lang.String tipo,java.lang.String nvoMov,boolean tieneRef,java.lang.String reloj1,java.lang.String reloj2,pe.gob.sunat.sp.asistencia.bean.BeanTurnoTrabajo turno )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.lang.String obtenerUOVisibilidad( java.lang.String dbpool,java.lang.String codUO )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public int validaRango( java.lang.String dbpool,java.lang.String mov,java.lang.String fechaBase,java.lang.String fechaEvaluada )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void procesarMarcaciones( java.util.HashMap mapa,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void generarRegistros( java.util.HashMap mapa,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void procesarCalificacion( java.util.HashMap mapa,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void generarDataReloj( java.util.HashMap mapa,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void cerrarAsistencia( java.util.HashMap mapa,java.lang.String usuario )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void procesarPases( java.util.HashMap datos )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public boolean esJefeEncargadoDelegado( java.util.HashMap datos )
      throws java.rmi.RemoteException;

   public boolean esJefeEncargadoDelegadoSolicitudes( java.util.HashMap datos )
      throws java.rmi.RemoteException;

   /**
    * WERR-PAS20155E230300132
    */
   public boolean esDelegadoEncargadoPapeleta( java.util.HashMap datos )
      throws java.rmi.RemoteException;

   public void registrarManual( java.util.HashMap datos )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public boolean esSupervisor( java.lang.String dbpool,java.lang.String codPers,java.lang.String mov,java.lang.String codUO )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList cargarRelojes( java.lang.String dbpool,java.lang.String estado )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList calificarAsistenciasFormativas( java.lang.String dbpool,java.lang.String[] params,java.util.ArrayList lista,java.lang.String usuario,java.lang.String fecha,java.lang.String regimenModalidad )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarUnidades( java.lang.String dbpool,java.lang.String registro )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarUnidadesNoDependientes( java.lang.String dbpool,java.lang.String registro,java.lang.String nivel1,java.lang.String nivel2 )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarSubUnidades( java.lang.String dbpool,java.lang.String unidadSinCeros,java.lang.String unidad,java.lang.String nivel )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.List findColaboradoresSinClimaLicenciaVacacionesByUOByFecha( java.lang.String dbpool,java.util.Map datos )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public void registrarPermisoRefrigerio( java.lang.String dbpool,java.util.Map datos )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarUnidadesByNivelByReporte( java.lang.String dbpool,java.lang.String nivel,java.lang.String registro )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarT5864Parametro( java.lang.String criterio,java.lang.String valor,java.lang.String codTab )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

   public java.util.ArrayList buscarT5864ParametroPorFiltro( java.util.Map filtro )
      throws pe.gob.sunat.sol.IncompleteConversationalState, java.rmi.RemoteException;

}
