/*
 * Generated by XDoclet - Do not edit!
 */
package pe.gob.sunat.rrhh.padron.ejb;

/**
 * Remote interface for PadronFacade.
 * @xdoclet-generado el 03-02-2020
 */
public interface PadronFacadeRemote
   extends javax.ejb.EJBObject
{
   /**
    * Metodo findBycodPers
    * @param String codPers
    * @return ArrayList mRpta
    * @throws FacadeException    */
   public java.util.Map findByCodPers( java.lang.String codPers )
      throws pe.gob.sunat.framework.core.ejb.FacadeException, java.rmi.RemoteException;

   /**
    * Metodo fichaPersonaPadron
    * @param Map params
    * @return HashMap mRpta
    * @throws FacadeException    */
   public java.util.Map fichaPersonaPadron( java.util.Map params )
      throws pe.gob.sunat.framework.core.ejb.FacadeException, java.rmi.RemoteException;

   /**
    * Metodo fichaPersonaPadronExt
    * @param HashMap params
    * @return HashMap mRpta
    * @throws FacadeException    */
   public java.util.Map fichaPersonaPadronExt( java.util.Map params )
      throws pe.gob.sunat.framework.core.ejb.FacadeException, java.rmi.RemoteException;

   /**
    * Metodo joinWithT02T12
    * @param Map params
    * @return ArrayList listados
    * @throws FacadeException    */
   public java.util.List joinWithT02T12( java.util.Map params )
      throws pe.gob.sunat.framework.core.ejb.FacadeException, java.rmi.RemoteException;

   /**
    * metodo buscar: que se encarga de buscar parametros como es categoria y unidad organizacional
    * @param Map params
    * @return ArrayList listados
    * @throws FacadeException    */
   public java.util.List buscar( java.util.Map params )
      throws pe.gob.sunat.framework.core.ejb.FacadeException, java.rmi.RemoteException;

}
